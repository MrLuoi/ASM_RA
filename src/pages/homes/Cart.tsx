import { useCart } from "../../cart/CartContext";
import { useNavigate } from "react-router-dom";
import axios from "axios"; // Import axios ƒë·ªÉ g·ª≠i y√™u c·∫ßu API
import "./Cart.css"; // Import CSS thu·∫ßn

const Cart: React.FC = () => {
  const { cartItems, removeFromCart, updateQuantity } = useCart();
  const navigate = useNavigate();

  // T√≠nh t·ªïng ti·ªÅn gi·ªè h√†ng
  const totalPrice = cartItems.reduce(
    (total, item) => total + item.price * (item.quantity || 1),
    0
  );

  // H√†m x·ª≠ l√Ω khi nh·∫•n n√∫t "Thanh to√°n"
  const handleCheckout = () => {
    navigate("/checkout");
  };

  // H√†m x·ª≠ l√Ω c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng v√† c∆° s·ªü d·ªØ li·ªáu
  const handleUpdateQuantity = async (itemId: string, newQuantity: number) => {
    if (newQuantity <= 0) return; // Kh√¥ng cho ph√©p s·ªë l∆∞·ª£ng nh·ªè h∆°n ho·∫∑c b·∫±ng 0

    // C·∫≠p nh·∫≠t gi·ªè h√†ng
    updateQuantity(itemId, newQuantity);

    try {
      // G·ª≠i y√™u c·∫ßu PATCH ƒë·∫øn API ƒë·ªÉ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng trong c∆° s·ªü d·ªØ li·ªáu
      await axios.patch(`http://localhost:3000/products/${itemId}`, {
        quantity: newQuantity,
      });
    } catch (error) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m:", error);
      alert("ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m.");
    }
  };

  return (
    <div className="cart-container">
      <h1 className="cart-title">üõí Gi·ªè H√†ng</h1>

      {cartItems.length === 0 ? (
        <p className="empty-cart">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
      ) : (
        <>
          <table className="cart-table">
            <thead>
              <tr>
                <th>S·∫£n ph·∫©m</th>
                <th>ƒê∆°n gi√°</th>
                <th>S·ªë l∆∞·ª£ng</th>
                <th>Th√†nh ti·ªÅn</th>
                <th>Thao t√°c</th>
              </tr>
            </thead>
            <tbody>
              {cartItems.map((item) => (
                <tr key={item.id}>
                  <td className="cart-item">
                    <img src={item.image} alt={item.name} className="cart-item-img" />
                    <span>{item.name}</span>
                  </td>
                  <td>{item.price.toLocaleString()} VND</td>
                  <td>
                    <div className="quantity-control">
                      <button onClick={() => handleUpdateQuantity(item.id, (item.quantity || 1) - 1)}>-</button>
                      <span>{item.quantity || 1}</span>
                      <button onClick={() => handleUpdateQuantity(item.id, (item.quantity || 1) + 1)}>+</button>
                    </div>
                  </td>
                  <td className="price">
                    {(item.price * (item.quantity || 1)).toLocaleString()} VND
                  </td>
                  <td>
                    <button className="remove-btn" onClick={() => removeFromCart(item.id)}>X√≥a</button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <div className="cart-footer">
            <h3>T·ªïng: {totalPrice.toLocaleString()} VND</h3>
            <button className="checkout-btn" onClick={handleCheckout}>Thanh To√°n</button>
          </div>
        </>
      )}
    </div>
  );
};

export default Cart;
