import { useMutation, useQuery, useQueryClient } from "@tanstack/react-query";
import axios from "axios";
import { Link } from "react-router-dom";
import { useState } from "react";
import "./list.css"; // Import CSS thu·∫ßn

function ProductList() {
  const queryClient = useQueryClient();
  const [currentPage, setCurrentPage] = useState(1);
  const productsPerPage = 8; // 8 s·∫£n ph·∫©m 1 trang

  // L·∫•y danh s√°ch s·∫£n ph·∫©m
  const getAllProducts = async () => {
    const { data } = await axios.get("http://localhost:3000/products");
    return data;
  };

  const { data, isLoading, error } = useQuery({
    queryKey: ["products"],
    queryFn: getAllProducts,
  });

  const deleteProduct = async (id: number) => {
    await axios.delete(`http://localhost:3000/products/${id}`);
  };

  const mutation = useMutation({
    mutationFn: deleteProduct,
    onSuccess: () => {
      alert("X√≥a s·∫£n ph·∫©m th√†nh c√¥ng!");
      queryClient.invalidateQueries({ queryKey: ["products"] });
    },
    onError: () => {
      alert("C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m!");
    },
  });

  if (isLoading) return <p className="loading">ƒêang t·∫£i d·ªØ li·ªáu...</p>;
  if (error) return <p className="error">ƒê√£ x·∫£y ra l·ªói khi t·∫£i d·ªØ li·ªáu.</p>;

  // T√≠nh to√°n ph√¢n trang
  const totalPages = Math.ceil(data.length / productsPerPage);
  const startIndex = (currentPage - 1) * productsPerPage;
  const endIndex = startIndex + productsPerPage;
  const paginatedProducts = data.slice(startIndex, endIndex);

  return (
    <div className="container">
      <h2 className="title">üì¶ Danh s√°ch s·∫£n ph·∫©m</h2>
      <table className="product-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>T√™n s·∫£n ph·∫©m</th>
            <th>M√¥ t·∫£</th>
            <th>H√¨nh ·∫£nh</th>
            <th>Gi√°</th>
            <th>Danh m·ª•c</th>
            <th>H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {paginatedProducts.map((product: any) => (
            <tr key={product.id}>
              <td>{product.id}</td>
              <td>{product.name}</td>
              <td className="description">{product.description}</td>
              <td>
                <img src={product.image} alt="product" className="product-img" />
              </td>
              <td className="price">{product.price.toLocaleString()} ƒë</td>
              <td>{product.category}</td>
              <td className="actions">
                <Link to={`/admin/edit/${product.id}`} className="edit-btn">
                  ‚úèÔ∏è S·ª≠a
                </Link>
                <button
                  onClick={() => {
                    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?")) {
                      mutation.mutate(product.id);
                    }
                  }}
                  className="delete-btn"
                >
                  üóëÔ∏è X√≥a
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* Ph√¢n trang */}
      <div className="pagination">
        <button
          onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}
          disabled={currentPage === 1}
          className="page-btn"
        >
          ‚óÄ Trang tr∆∞·ªõc
        </button>
        <span className="page-number">Trang {currentPage} / {totalPages}</span>
        <button
          onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}
          disabled={currentPage === totalPages}
          className="page-btn"
        >
          Trang sau ‚ñ∂
        </button>
      </div>
    </div>
  );
}

export default ProductList;
